<apex:page standardController="Case" extensions="AssetCaseExtension">

<script>

//
// Prevents the first input field (usually a calendar) from
// automatically stealing focus when the page loads, obscuring 
// other rows in the table.
window.setFocusOnLoad = function() {};

// The above works by overriding one of Salesforce's (non-public) 
// legacy Javascript functions with a do-nothing implementation, 
// thus blotting out the function's effects when Salesforce calls it. 
//
// This is an ugly, unsafe hack but unfortunately, it's currently 
// the only dependable solution available.
// 
// Salesforce, please fix this!!
//
// http://boards.developerforce.com/t5/Visualforce-Development/inputField-Calendar-Widget/m-p/70897
// http://boards.developerforce.com/t5/Visualforce-Development/How-to-remove-focus-from-first-input-field/td-p/105445
//

</script>

<style type="text/css">
.assetCase { border-top: 2px solid #441E1C; }
.asset     { border-top: 2px solid #66c;    }
</style>

<apex:form id="theForm">

	<apex:outputPanel id="messages">
		<apex:messages />
	</apex:outputPanel>
  	
	<apex:pageBlock title="Assets and Requests" id="infoPanel">
	<!-- This panel lists Open Asset_Case__c Records -->
	
		<apex:pageBlockButtons location="top">
			<apex:commandButton value="Request New Asset" action="{!requestAsset}" rendered="{!canRequestAsset}" />
		</apex:pageBlockButtons>
		
		<apex:tabPanel id="requestTabs" selectedTab="assets" switchType="client">
				
		<apex:tab styleClass="asset" label="Assets ({! assetCount })" id="assetsTab" name="assets">
		<apex:pageBlockTable id="assetList" value="{!assetRows}" var="r">

	       	<apex:column headerValue="Name">
	       		<apex:outputLink value="/{! r.obj.Id }" target="_blank" title="View this Asset">{!r.obj.Name}</apex:outputLink>
	       	</apex:column>
       
	       	<apex:column headerValue="Asset Classification">
	       		<apex:outputLink value="/{! r.obj.Asset_Classification__c }" target="_blank" title="View this Asset Classification">{!r.obj.Asset_Classification__r.Name}</apex:outputLink>
	       	</apex:column>
        	
	       	<apex:column headerValue="Details">
	       		<apex:outputText value="{!r.obj.Detail_Summary__c}" />
	       	</apex:column>
       	
	       	<apex:column headerValue="">                 		
	       		
	       		<apex:outputPanel rendered="{! r.canReclaim }" layout="block">
	       		    
	       		    <!-- A Reclaim button --> 
	       		    <apex:commandButton action="{!requestReclamation}" value="Reclaim" reRender="theForm">
	       				<apex:param name="editid" value="{!r.obj.Id}" />
	       			</apex:commandButton>
	       			&nbsp;on&nbsp;       
	       			          			
	       			<!-- The Asset_Case__c.Date_Needed__c field. -->
	       			<apex:inputField value="{! r.requestPrototype.Date_Needed__c }" />
	       			&nbsp;
	       			
	       			<!-- The Asset_Case__c.Notes__c field. -->
	       			<apex:inputField value="{! r.requestPrototype.Notes__c }" />
	       			
	       		</apex:outputPanel>
	       		
	       		<apex:outputPanel rendered="{! r.hasPendingReclamation }" layout="block">
	       		Reclamation Requested
	       		</apex:outputPanel>  
	       		                 		
	       	</apex:column>
	       	
        </apex:pageBlockTable>
		</apex:tab> 
		
		<apex:tab styleClass="assetCase" label="Open Requests ({! openAssetCaseCount })" name="openRequests" id="openRequestsTab">		
		<apex:pageBlockTable id="openAssetCaseList" value="{!openAssetCaseRows}" var="r">
   		
			<apex:column headerValue="Status">
			  	<apex:outputText escape="false" value="{!r.obj.Status_Summary__c}" />
			</apex:column>
			
			<apex:column headerValue="Asset Classification">
	       		<apex:outputLink value="/{! r.obj.Asset_Classification__c }" target="_blank" title="View this Asset Classification">{!r.obj.Asset_Classification__r.Name}</apex:outputLink>
	       	</apex:column>
	       	
	       	<apex:column headerValue="Asset">
	       		<apex:outputLink value="/{! r.obj.Asset__c }" target="_blank" title="View this Asset">{!r.obj.Asset__r.Name}</apex:outputLink>
	       	</apex:column>
	       	
			<apex:column headerValue="Details">
				<apex:outputText escape="false" value="{!r.obj.Detail_Summary__c}" />
			</apex:column>
			    
			<apex:column headerValue="Due Date">
				<apex:outputField value="{!r.obj.Date_Needed__c}"></apex:outputField> 
			</apex:column>
			
		    <apex:column headerValue="">		    
		    	<!-- If we can cancel this request, display a Cancel Request button. -->
		    	<apex:commandButton rendered="{!r.canCancel}" value="Cancel Request" action="{!cancelRequest}"  reRender="theForm">
		        	<apex:param name="editid" value="{!r.obj.id}" />
		    	</apex:commandButton>		    	
			</apex:column>   
			                       
		</apex:pageBlockTable>
		</apex:tab>
		
		<apex:tab styleClass="assetCase" label="Complete Requests ({! completeAssetCaseCount })" name="completeRequests" id="completeRequestsTab">
		<apex:pageBlockTable id="completeAssetCaseList" value="{!completeAssetCaseRows}" var="r">
	   <!-- This panel lists Complete Asset_Case__c Records -->
	   		
			<apex:column headerValue="Status">
			  	<apex:outputText escape="false" value="{!r.obj.Status_Summary__c}" />
			</apex:column>
			
			<apex:column headerValue="Asset Classification">
	       		<apex:outputLink value="/{! r.obj.Asset_Classification__c }" target="_blank" title="View this Asset Classification">{!r.obj.Asset_Classification__r.Name}</apex:outputLink>
	       	</apex:column>
	       	
	       	<apex:column headerValue="Asset">
	       		<apex:outputLink value="/{! r.obj.Asset__c }" target="_blank" title="View this Asset">{!r.obj.Asset__r.Name}</apex:outputLink>
	       	</apex:column>
	       	
			<apex:column headerValue="Details">
				<apex:outputText escape="false" value="{!r.obj.Detail_Summary__c}" />
			</apex:column>
			    
			<apex:column headerValue="Due Date">
				<apex:outputField value="{!r.obj.Date_Needed__c}"></apex:outputField> 
			</apex:column>
			    
			<apex:column headerValue="Date Completed">
				<apex:outputField value="{!r.obj.Date_Complete__c}"></apex:outputField> 
			</apex:column>
						                       
		</apex:pageBlockTable>
		</apex:tab>	
	
	</apex:tabPanel>
		
	</apex:pageBlock>
        
    </apex:form>
</apex:page>